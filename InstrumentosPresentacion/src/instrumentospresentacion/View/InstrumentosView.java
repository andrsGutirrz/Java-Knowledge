/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package instrumentospresentacion.View;

import instrumentospresentacion.Control.InstrumentosControl;
import instrumentospresentacion.Model.InstrumentosModel;
import instrumentospresentacion.Principal;
import java.util.Observable;
import java.util.Observer;
import javax.swing.JOptionPane;

/**
 *
 * @author marcovinicio
 */
public class InstrumentosView extends javax.swing.JInternalFrame implements Observer{

    /**
     * Creates new form Instrumentos
     */
    public InstrumentosView() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        filterLb = new javax.swing.JLabel();
        filterField = new javax.swing.JTextField();
        searchBT = new javax.swing.JButton();
        addBT = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        instrumentosTable = new javax.swing.JTable();
        removeBT = new javax.swing.JButton();
        ExitBT = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        filterLb.setText("Descripcion");

        searchBT.setText("Buscar");
        searchBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBTActionPerformed(evt);
            }
        });

        addBT.setText("Agregar");
        addBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBTActionPerformed(evt);
            }
        });

        instrumentosTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        instrumentosTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                instrumentosTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(instrumentosTable);

        removeBT.setText("Remove");
        removeBT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                removeBTMouseClicked(evt);
            }
        });

        ExitBT.setText("Exit");
        ExitBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitBTActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addBT)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(filterLb)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(filterField, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(searchBT))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(15, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(ExitBT)
                .addGap(62, 62, 62)
                .addComponent(removeBT)
                .addGap(92, 92, 92))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(filterLb)
                    .addComponent(filterField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchBT))
                .addGap(18, 18, 18)
                .addComponent(addBT)
                .addGap(29, 29, 29)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(removeBT)
                    .addComponent(ExitBT))
                .addContainerGap(141, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBTActionPerformed
        control.buscar();
    }//GEN-LAST:event_searchBTActionPerformed

    private void addBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBTActionPerformed
        Principal.INSTRUMENTO_VIEW.setLocation(this.addBT.getLocationOnScreen());
        control.preAgregar();
    }//GEN-LAST:event_addBTActionPerformed

    private void instrumentosTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_instrumentosTableMouseClicked
        if (evt.getClickCount() == 2) {
        int row = this.instrumentosTable.getSelectedRow();
        Principal.INSTRUMENTO_VIEW.setLocation(evt.getLocationOnScreen());
        control.editar(row);
        }
    }//GEN-LAST:event_instrumentosTableMouseClicked

    private void removeBTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeBTMouseClicked
        int row = this.instrumentosTable.getSelectedRow();
        Principal.INSTRUMENTO_VIEW.setLocation(evt.getLocationOnScreen());
        try {
            control.borrar(row);
        } catch (Exception ex) {
            System.out.println("Â¡ERROR!");
        }
    }//GEN-LAST:event_removeBTMouseClicked

    private void ExitBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitBTActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_ExitBTActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InstrumentosView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InstrumentosView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InstrumentosView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InstrumentosView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InstrumentosView().setVisible(false);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ExitBT;
    public javax.swing.JButton addBT;
    public javax.swing.JTextField filterField;
    private javax.swing.JLabel filterLb;
    public javax.swing.JTable instrumentosTable;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JButton removeBT;
    public javax.swing.JButton searchBT;
    // End of variables declaration//GEN-END:variables
    InstrumentosControl control;
    InstrumentosModel model;

    public InstrumentosControl getControl() {
        return control;
    }

    public void setControl(InstrumentosControl control) {
        this.control = control;
    }

    public InstrumentosModel getModel() {
        return model;
    }

    public void setModel(InstrumentosModel model) {
        this.model = model;
        model.addObserver(this);
    }
    
    
    
    @Override
    public void update(Observable o, Object arg) {
        filterField.setText(model.getFilter().getDescripcion());
       if (model.getErrores().get("filterField")!=null){
            filterLb.setBorder(Principal.BORDER_ERROR);
            filterLb.setToolTipText(model.getErrores().get("filterField"));
        }
        else{
            filterLb.setBorder(null);
            filterLb.setToolTipText("");
        }
       
       instrumentosTable.setModel(model.getInstrumentos());
        this.revalidate();
        if (!model.getMensaje().equals("")){
            JOptionPane.showMessageDialog(this, model.getMensaje(), "",JOptionPane.INFORMATION_MESSAGE);
        } 
    }
}
